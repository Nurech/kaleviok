name: Firebase Deploy

on:
  push:
    branches:
      - master
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build Application for Production
        if: github.ref == 'refs/heads/master'
        run: pnpm run build:prod

      - name: Build Application for Development
        if: github.ref == 'refs/heads/develop'
        run: pnpm run build:dev

      # Extract project ID from production service account JSON
      - name: Extract Firebase Project ID (Production)
        if: github.ref == 'refs/heads/master'
        run: echo "PROJECT_ID=$(echo '${{ secrets.GCP_SA_KEY_PROD }}' | jq -r '.project_id')" >> $GITHUB_ENV

      # Extract project ID from development service account JSON
      - name: Extract Firebase Project ID (Development)
        if: github.ref == 'refs/heads/develop'
        run: echo "PROJECT_ID=$(echo '${{ secrets.GCP_SA_KEY_DEV }}' | jq -r '.project_id')" >> $GITHUB_ENV

      - name: Deploy to Firebase (Production)
        if: github.ref == 'refs/heads/master'
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting:prod,functions --project ${{ env.PROJECT_ID }}
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY_PROD }}

      - name: Deploy to Firebase (Development)
        if: github.ref == 'refs/heads/develop'
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting:dev,functions --project ${{ env.PROJECT_ID }}
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY_DEV }}
